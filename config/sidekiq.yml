:schedule:
  create_market_order_batches:
    cron: '* * * * *'
    class: 'MarketOrder::CreateAllBatchesWorker'
    description: "Import market orders for all regions/structures with market order sync enabled"

  complete_market_order_batches:
    cron: '* * * * *'
    class: 'MarketOrder::CompleteAllBatchesWorker'
    description: "Check all incomplete market order batches for completion"

  sync_all_contracts_from_esi:
    cron: '*/5 * * * *'
    class: 'Corporation::SyncAllContractsFromESIWorker'
    description: "Sync contracts for all corporations with contract sync enabled"

  import_all_killmails_from_zkb:
    cron: '*/5 * * * *'
    class: 'Alliance::FetchAllKillmailsFromZKBWorker'
    description: "Import killmails for all alliances with killmail sync enabled"

  sync_industry_indices_from_esi:
    cron: '0 * * * *'
    class: 'IndustryIndexSnapshot::SyncFromESIWorker'
    description: "Create a snapshot of industry indices"

  sync_market_prices_from_esi:
    cron: '0 * * * *'
    class: 'MarketPriceSnapshot::SyncFromESIWorker'
    description: "Create a snapshot of market prices"

  prune_market_orders:
    cron: '15 * * * *'
    class: 'MarketOrder::PruneWorker'
    args: ['hour']
    description: "Prune market orders hourly"

  preload_region_type_histories:
    cron: '15 11 * * *'
    class: 'Region::PreloadTypeHistoriesWorker'
    description: "Preload type histories for items in contracts, fittings, and killmails"

  calculate_live_stock_levels:
    cron: '*/5 * * * *'
    class: 'Fitting::CalculateAllStockLevelsWorker'
    description: "Calculate live stock levels"

  calculate_end_of_day_stock_levels:
    cron: '0 11 * * *'
    class: 'Fitting::CalculateAllStockLevelsWorker'
    args: ['daily']
    description: "Calculate end-of-day stock levels"

  calculate_end_of_week_stock_levels:
    cron: '0 11 * * 7'
    class: 'Fitting::CalculateAllStockLevelsWorker'
    args: ['weekly']
    description: "Calculate end-of-week stock levels"

  calculate_end_of_month_stock_levels:
    cron: '0 11 1 * *'
    class: 'Fitting::CalculateAllStockLevelsWorker'
    args: ['monthly']
    description: "Calculate end-of-month stock levels"

  fetch_all_orders:
    cron: '* * * * *'
    class: 'Order::FetchAllFromESIWorker'
    description: "Fetch market orders for enabled locations"
